# -*- coding: utf-8 -*-
"""Calculadora feita em Função.

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wZb_t64o6MdMt7djfc0kp4e-usmuR1YL
"""

# A Primeira Função Criada foi a Entrada_Dados, onde o Usuário insere os valores e a operação
# Sendo que na hora de inserir a Operação Verificamos ela caso não seja uma válida.

def entrada_dados() :
  global V1
  global Op
  global V2

  V1 = str(input("Digite o Primeiro Valor (Digite 'sair' para sair): "))
  if(V1.lower() == "sair"):
    return
  elif(V1.isalnum() == False):
    if( "." in V1 ):
      pass
    else:
      return
  Op = str(input("Digite o operador da operação que deseja ( Soma + , Subtração - , Multiplicação * , Divisão / ): "))
  if(Op != "+" and Op != "-" and Op != "*" and Op != "/"):
    return
  else:
    V2 = str(input("Digite o Segundo Valor (Digite 'sair' para sair): "))
  if(V2.lower() == "sair"):
    return
  elif(V2.isalnum() == False):
    if( "." in V2 ):
      pass
    else:
      return
# Depois criado a Função Processar_Calculo, que verifica o que está armazenado na váriavel
# da Operação e caso atenda alguma das decisões execute a fórmula.

def processar_calculo() :
  global Op
  global V1
  global V2
  global Resultado

  if(Op == "+"):
    Resultado = float(V1) + float(V2)
  elif(Op == "-"):
    Resultado = float(V1) - float(V2)
  elif(Op == "*"):
    Resultado = float(V1) * float(V2)
  elif(Op == "/"):
    Resultado = float(V1) / float(V2)

# Agora Temos a Função Saída_Resultado, onde é a que pode iniciar ou finalizar a Calculadora
# Sendo que Calc define se está iniciando ou finalizando uma equação.

def saida_resultado() :
  global Resultado
  global Fim
  global Calc

  if(Calc == True) :
    if(Fim2 == 0):
      print("O seu resultado é: ",Resultado)
    print("\nDeseja fazer outra Operação?(S/N) ")
    Fim = str(input())

  else :
    print("Boas Vindas, Usuário esse programa se chama Calculadora I. \n \nNesse programa funciona como uma calculadora simples, onde você pode realizar somas, subtrações, multiplicações e divisões, podendo realizar a operação que desejar, e você pode sair em qualque momento digitando sair.")
    Calc = True

# E por último temos a Função Função_Mãe que organiza as 3 outras Funções e verifica, os
# Erros ou a saída do Usuário, sendo que quando se inicia a primeira Equação, as funções
# entram em um Loop que vai se repetindo enquanto o Usuário querer fazer mais equações, além
# de possibilitar a verificação de Erros ou a saída do Usuário.

def função_mãe():
  global Calc
  Calc = False
  global Resultado
  global Fim2
  Fim2 = 0
  saida_resultado()
  if(Calc):
    while True:
      try:
        Resultado = 0.0
        entrada_dados()
        if(V1.lower() == "sair" or V2.lower() == "sair"):
          print("Interrupção... Fim do Programa")
          break
        elif(V1.isalnum() == False):
          if( "." in V1 ):
            pass
          else:
            print("Valor não Permitido, Tente Novamente")
            continue
        elif(V2.isalnum() == False):
          if( "." in V2 ):
            pass
          else:
            print("Valor não Permitido, Tente Novamente")
            continue
        processar_calculo()
        if(Op != "+" and Op != "-" and Op != "*" and Op != "/"):
          if(Op != "sair"):
            print("Operador Inválido")
            continue
          else:
            print("Fim da Função")
            break
        while True:
          saida_resultado()
          if(Fim.lower() == "s") :
            Fim2 = 0
            break
          elif(Fim.lower() == "n") :
            Fim2 = 0
            break
          elif(Fim.lower() != "s" and "n") :
            print("Comando Errado, digite S ou N:")
            Fim2 = 1
            continue
        if(Fim.lower() == "s") :
          continue
        elif(Fim.lower() == "n") :
          print("Fim da Função")
          break
      except ValueError :
        print("Valor não Permitido, Tente Novamente")
        continue
      except ZeroDivisionError :
        print("Não é possível dividir por zero, tente novamente")
        continue

função_mãe()